1.    Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат.

CREATE PROCEDURE proc1()
SELECT books2.name AS 'Назва книги', books2.price AS 'Ціна', books2.publisher AS 'Видавництво', books2.format AS 'Формат' FROM books2;
CALL proc1();
	або
CREATE PROCEDURE proc1_()
SELECT books2.name AS 'Назва книги', books2.price AS 'Ціна', publishers.publisher_name AS 'Видавництво', formats.format_name AS 'Формат' FROM books2 JOIN publishers ON books2.publisher=publishers.id_publisher JOIN formats ON books2.format=formats.id_format;
CALL proc1_();

2.    Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям.

CREATE PROCEDURE proc2()
SELECT books2.topic AS 'Тема книги', books2.category AS 'Категорія', books2.name AS 'Назва книги', books2.publisher AS 'Видавництво' FROM books2;
CALL proc2();
	або
CREATE PROCEDURE proc2_()
SELECT topics.topic_name AS 'Тема книги', categories.category_name AS 'Категорія', books2.name AS 'Назва книги', publishers.publisher_name AS 'Видавництво' FROM books2 JOIN topics ON books2.topic=topics.id_topic JOIN categories ON books2.category=categories.id_category JOIN publishers ON books2.publisher=publishers.id_publisher;
CALL proc2_();

3.    Вивести книги видавництва 'BHV', видані після 2000 р

CREATE PROCEDURE proc3(in pub text(100), in year int)
SELECT books2.code AS 'Код книги',books2.name AS 'Назва книги', publishers.publisher_name AS 'Видавництво', books2.date AS 'Рік видання', books2.price AS 'Ціна' FROM books2 JOIN publishers ON books2.publisher=publishers.id_publisher
WHERE YEAR(books2.date)>2000 AND publishers.publisher_name LIKE pub
ORDER BY books2.code ASC;
CALL proc3('%BHV%',2000);

4.    Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій / зростанню кількості сторінок.

CREATE PROCEDURE proc4__()
SELECT books2.name AS 'Назва', SUM(books2.pages) AS 'Загальна кількість сторінок', books2.category AS 'Категорія' FROM books2 JOIN categories ON books2.category=categories.id_category GROUP BY books2.category ORDER BY books2.pages ASC;
CALL proc4__();

5.    Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'.

CREATE PROCEDURE proc5(in topic int, in categori int, OUT avg_price int)
SET avg_price=(SELECT AVG(books2.price) FROM books2 WHERE books2.topic LIKE topic AND books2.category LIKE categori);
CALL proc5(1,7,@avg_price);
SELECT @avg_price;

6.    Вивести всі дані універсального відношення.

CREATE PROCEDURE proc6()
SELECT * FROM books2;
CALL proc6();
	або
CREATE PROCEDURE proc6_()
SELECT books2.num 'ID', books2.code 'Код книги', books2.is_new 'Новинка', books2.name 'Назва книги', books2.price 'Ціна',publishers.publisher_name 'Видавництво', books2.pages 'Сторінки', formats.format_name 'Формат', books2.date, books2.tirage,topics.topic_name,categories.category_name FROM books2 JOIN publishers ON books2.publisher=publishers.id_publisher JOIN topics ON books2.topic=topics.id_topic JOIN categories ON books2.category=categories.id_category JOIN formats ON books2.format=formats.id_format;
CALL proc6_();

7.    Вивести пари книг, що мають однакову кількість сторінок.

CREATE PROCEDURE proc7()
SELECT DISTINCT book1.name AS 'Книга 1',book2.name AS 'Книга 2' FROM books2 book1 JOIN books2 book2 ON book1.pages=book2.pages AND book1.num!=book2.num;
CALL proc7();

8.    Вивести тріади книг, що мають однакову ціну.

CREATE PROCEDURE proc8()
SELECT DISTINCT book1.name AS 'Книга 1',book2.name AS 'Книга 2', book3.name AS 'Книга 3' FROM books2 book1 JOIN books2 book2 ON book1.price=book2.price AND book1.num!=book2.num JOIN books2 book3 ON book2.price=book3.price AND book2.num!=book3.num;
CALL proc8();

9.    Вивести всі книги категорії 'C ++'.

CREATE PROCEDURE proc9_(in categori VARCHAR(200))
SELECT books2.name AS 'Назва Книги', books2.price AS 'Ціна', books2.pages AS 'Кількість сторінок', books2.format AS 'Формат', books2.date AS 'Дата видавництва', publishers.publisher_name AS 'Видавництво', topics.topic_name AS 'Тема', categories.category_name AS 'Категорія' FROM books2 JOIN publishers ON books2.publisher=publishers.id_publisher JOIN topics ON books2.topic=topics.id_topic JOIN categories ON books2.category=categories.id_category WHERE categories.category_name=categori;
CALL proc9_("C&C++");

10.    Вивести список видавництв, у яких розмір книг перевищує 400 сторінок.

CREATE PROCEDURE proc10_()
SELECT publishers.publisher_name AS 'Видавництво' FROM books2, publishers WHERE books2.pages>=400;
CALL proc10_();

11.    Вивести список категорій за якими більше 3-х книг.

CREATE PROCEDURE proc11(in num_books int)
SELECT categories.id_category AS 'ID', categories.category_name AS 'Категорія' FROM categories WHERE (SELECT COUNT(*) FROM books2 WHERE books2.category = categories.id_category) > num_books;
CALL proc11(3);

12.    Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва.

CREATE PROCEDURE proc12(in name_publisher VARCHAR(200))
SELECT books2.num AS 'ID', books2.code AS 'Код', books2.is_new AS 'Новинка', books2.name AS 'Назва книги', books2.price AS 'Ціна', books2.pages AS 'Кількість сторінок' FROM books2 WHERE EXISTS (SELECT publishers.id_publisher,publishers.publisher_name FROM publishers WHERE publishers.publisher_name = name_publisher AND publishers.id_publisher = books2.publisher);
CALL proc12('Видавнича група BHV');

13.    Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва.

CREATE PROCEDURE proc13(in name_publisher VARCHAR(200))
SELECT books2.num AS 'ID', books2.code AS 'Код', books2.is_new AS 'Новинка', books2.name AS 'Назва книги', books2.price AS 'Ціна', books2.pages AS 'Кількість сторінок' FROM books2 WHERE NOT EXISTS (SELECT publishers.id_publisher,publishers.publisher_name FROM publishers WHERE publishers.publisher_name = name_publisher AND publishers.id_publisher = books2.publisher);
CALL proc13('Видавнича група BHV');

14.    Вивести відсортоване загальний список назв тем і категорій.

CREATE PROCEDURE proc14()
((SELECT topics.topic_name FROM topics) UNION (SELECT categories.category_name FROM categories)) ORDER BY topic_name ASC;
CALL proc14();

15.    Вивести відсортований в зворотному порядку загальний список перших слів назв книг і категорій що не повторюються

CREATE PROCEDURE proc15()
SELECT DISTINCT name FROM ((SELECT REGEXP_SUBSTR(TRIM(books2.name),'^[^\\s]+') AS name FROM books2) UNION ALL(SELECT REGEXP_SUBSTR(TRIM(categories.category_name),'^[^\\s]+') AS 'Перше слово назви книги і категорій що не повторюються' FROM categories)) books2,categories ORDER BY name DESC;
CALL proc15();